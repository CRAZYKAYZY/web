version: '3.9'
services:
  app:
    container_name: goweb_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      # - TEST_POSTGRES_USER=${TEST_DB_USER}
      # - TEST_POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      # - TEST_POSTGRES_DB=${TEST_DB_NAME}
      # - TEST_DATABASE_HOST=${TEST_DB_HOST}
      # - TEST_DATABASE_PORT=${TEST_DB_PORT}
    tty: true
    build: .
    env_file:
      - .env
    ports:
      - 8080:8080
    restart: on-failure
    depends_on:
      - postgresdb
    networks:
      - web-net

  postgresdb:
    image: postgres:15.1-alpine
    container_name: postgres_container
    # environment:
    #   - POSTGRES_USER=${DB_USER}
    #   - POSTGRES_PASSWORD=${DB_PASSWORD}
    #   - POSTGRES_DB=${DB_NAME}
    #   - DATABASE_HOST=${DB_HOST}
    #   - DATABASE_PORT=${DB_PORT}
    ports:
      - 5432:5432
    hostname: db
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - web-net

  # postgresdb_test:
  #   image: postgres:15.1-alpine
  #   container_name: postgres_test_container
  #   environment:
  #     - POSTGRES_USER=${TEST_DB_USER}
  #     - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
  #     - POSTGRES_DB=${TEST_DB_NAME}
  #     - DATABASE_HOST=${TEST_DB_HOST}
  #   ports:
  #     - '4568:5432'
  #   volumes:
  #     - ./pg_data_test:/var/lib/postgresql/data
  #   networks:
  #     - web-net

volumes:
  pg_data:
  #pg_data_test:

networks:
  web-net:
    driver: bridge